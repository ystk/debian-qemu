Origin: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=22dc8663d9fc7baa22100544c600b6285a63c7a3
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2021-02-05

From: Jason Wang <jasowang@redhat.com>
Date: Wed, 22 Jul 2020 08:57:46 +0000 (+0800)
Subject: net: forbid the reentrant RX
X-Git-Tag: v5.1.0-rc2~6^2
X-Git-Url: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=22dc8663d9fc7baa22100544c600b6285a63c7a3

net: forbid the reentrant RX

The memory API allows DMA into NIC's MMIO area. This means the NIC's
RX routine must be reentrant. Instead of auditing all the NIC, we can
simply detect the reentrancy and return early. The queue->delivering
is set and cleared by qemu_net_queue_deliver() for other queue helpers
to know whether the delivering in on going (NIC's receive is being
called). We can check it and return early in qemu_net_queue_flush() to
forbid reentrant RX.

Signed-off-by: Jason Wang <jasowang@redhat.com>
---

Index: qemu-2.1+dfsg/net/queue.c
===================================================================
--- qemu-2.1+dfsg.orig/net/queue.c
+++ qemu-2.1+dfsg/net/queue.c
@@ -243,6 +243,9 @@ void qemu_net_queue_purge(NetQueue *queu
 
 bool qemu_net_queue_flush(NetQueue *queue)
 {
+    if (queue->delivering)
+        return false;
+
     while (!QTAILQ_EMPTY(&queue->packets)) {
         NetPacket *packet;
         int ret;
