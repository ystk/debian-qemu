Description: exec: set map length to zero when returning NULL
 When mapping physical memory into host's virtual address space,
 'address_space_map' may return NULL if BounceBuffer is in_use.
 Set and return '*plen = 0' to avoid later NULL pointer dereference.
 .
 Reported-by: Alexander Bulekov <alxndr@bu.edu>
 Fixes: https://bugs.launchpad.net/qemu/+bug/1878259
 Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
 Suggested-by: Peter Maydell <peter.maydell@linaro.org>
 Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
 Message-Id: <20200526111743.428367-1-ppandit@redhat.com>
 Reviewed-by: Philippe Mathieu-Daud√© <philmd@redhat.com>
 Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
 .
 Author: Utkarsh Gupta <utkarsh@debian.org>

--- a/exec.c
+++ b/exec.c
@@ -2313,6 +2313,7 @@
     mr = address_space_translate(as, addr, &xlat, &l, is_write);
     if (!memory_access_is_direct(mr, is_write)) {
         if (bounce.buffer) {
+            *plen = 0;
             return NULL;
         }
         /* Avoid unbounded allocations */
--- a/include/exec/memory.h
+++ b/include/exec/memory.h
@@ -1070,7 +1070,8 @@
 /* address_space_map: map a physical memory region into a host virtual address
  *
  * May map a subset of the requested range, given by and returned in @plen.
- * May return %NULL if resources needed to perform the mapping are exhausted.
+ * May return %NULL and set *@plen to zero(0), if resources needed to perform
+ * the mapping are exhausted.
  * Use only for reads OR writes - not for read-modify-write operations.
  * Use cpu_register_map_client() to know when retrying the map operation is
  * likely to succeed.
