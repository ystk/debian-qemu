Origin: ubuntu, https://launchpad.net/ubuntu/+source/qemu/2.0.0+dfsg-2ubuntu1.38
Reviewed-by Santiago R.R. <santiagorr@riseup.net>
Bug-Debian: 886532

Backport of:

From 807e9869b8c4119b81df902625af818519e01759 Mon Sep 17 00:00:00 2001
From: Eduardo Habkost <ehabkost@redhat.com>
Date: Tue, 9 Jan 2018 13:45:13 -0200
Subject: [PATCH] i386: Change X86CPUDefinition::model_id to const char*

It is valid to have a 48-character model ID on CPUID, however the
definition of X86CPUDefinition::model_id is char[48], which can
make the compiler drop the null terminator from the string.

If a CPU model happens to have 48 bytes on model_id, "-cpu help"
will print garbage and the object_property_set_str() call at
x86_cpu_load_def() will read data outside the model_id array.

We could increase the array size to 49, but this would mean the
compiler would not issue a warning if a 49-char string is used by
mistake for model_id.

To make things simpler, simply change model_id to be const char*,
and validate the string length using an assert() on
x86_register_cpudef_type().

Reported-by: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
Message-Id: <20180109154519.25634-2-ehabkost@redhat.com>
Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
---
 target/i386/cpu.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

Index: qemu-2.0.0+dfsg/target-i386/cpu.c
===================================================================
--- qemu-2.0.0+dfsg.orig/target-i386/cpu.c	2018-01-23 09:07:10.367212408 -0500
+++ qemu-2.0.0+dfsg/target-i386/cpu.c	2018-01-23 09:07:32.771147171 -0500
@@ -529,7 +529,7 @@ struct X86CPUDefinition {
     int model;
     int stepping;
     FeatureWordArray features;
-    char model_id[48];
+    char model_id[49];
     bool cache_info_passthrough;
 };
 
