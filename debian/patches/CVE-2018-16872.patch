Description: usb-mtp: use O_NOFOLLOW and O_CLOEXEC.
 Open files and directories with O_NOFOLLOW to avoid symlinks attacks.
 While being at it also add O_CLOEXEC.
 . 
 usb-mtp only handles regular files and directories and ignores
 everything else, so users should not see a difference.
 . 
 Because qemu ignores symlinks, carrying out a successful symlink attack
 requires swapping an existing file or directory below rootdir for a
 symlink and winning the race against the inotify notification to qemu.
Author: Gerd Hoffmann <kraxel@redhat.com>
Origin: upstream, https://git.qemu.org/?p=qemu.git;a=commit;h=bab9df35ce73d1c8e19a37e2737717ea1c984dc1
--- a/hw/usb/dev-mtp.c	2014-08-01 16:12:17.000000000 +0200
+++ b/hw/usb/dev-mtp.c	2019-02-26 10:11:52.004678222 +0100
@@ -344,13 +344,18 @@
 {
     struct dirent *entry;
     DIR *dir;
+    int fd;
 
     if (o->have_children) {
         return;
     }
     o->have_children = true;
 
-    dir = opendir(o->path);
+    fd = open(o->path, O_DIRECTORY | O_CLOEXEC | O_NOFOLLOW);
+    if (fd < 0) {
+        return;
+    }
+    dir = fdopendir(fd);
     if (!dir) {
         return;
     }
@@ -677,7 +682,7 @@
 
     trace_usb_mtp_op_get_object(s->dev.addr, o->handle, o->path);
 
-    d->fd = open(o->path, O_RDONLY);
+    d->fd = open(o->path, O_RDONLY | O_CLOEXEC | O_NOFOLLOW);
     if (d->fd == -1) {
         usb_mtp_data_free(d);
         return NULL;
@@ -697,7 +702,7 @@
     trace_usb_mtp_op_get_partial_object(s->dev.addr, o->handle, o->path,
                                         c->argv[1], c->argv[2]);
 
-    d->fd = open(o->path, O_RDONLY);
+    d->fd = open(o->path, O_RDONLY | O_CLOEXEC | O_NOFOLLOW);
     if (d->fd == -1) {
         usb_mtp_data_free(d);
         return NULL;
