Backport of:

From: Prasad J Pandit <address@hidden>

When transitioning an OHCI controller to the OHCI_USB_OPERATIONAL
state, it creates an eof timer object in 'ohci_bus_start'.
It does not check if one already exists. This results in memory
leakage and null dereference issue. Add a check to avoid it.

Reported-by: Zuozhi Fzz <address@hidden>
Signed-off-by: Prasad J Pandit <address@hidden>

Origin: ubuntu, https://launchpad.net/ubuntu/+source/qemu/2.0.0+dfsg-2ubuntu1.35
Bug-Debian: https://bugs.debian.org/815009
Reviewed-by: Santiago R.R. <santiagorr@riseup.net>

---
 hw/usb/hcd-ohci.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

Index: qemu-2.0.0+dfsg/hw/usb/hcd-ohci.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/usb/hcd-ohci.c	2016-05-10 14:39:10.846642571 -0400
+++ qemu-2.0.0+dfsg/hw/usb/hcd-ohci.c	2016-05-10 14:40:17.947474551 -0400
@@ -1351,11 +1351,11 @@
  */
 static int ohci_bus_start(OHCIState *ohci)
 {
-    ohci->eof_timer = timer_new_ns(QEMU_CLOCK_VIRTUAL,
-                    ohci_frame_boundary,
-                    ohci);
-
-    if (ohci->eof_timer == NULL) {
+    if (!ohci->eof_timer) {
+        ohci->eof_timer = timer_new_ns(QEMU_CLOCK_VIRTUAL,
+                                        ohci_frame_boundary, ohci);
+    }
+    if (!ohci->eof_timer) {
         fprintf(stderr, "usb-ohci: %s: timer_new_ns failed\n", ohci->name);
         ohci_die(ohci);
         return 0;
