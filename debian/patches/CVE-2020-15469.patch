Origin: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=520f26fc6d17b71a43eaf620e834b3bdf316f3d3
Origin: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=24202d2b561c3b4c48bd28383c8c34b4ac66c2bf
Origin: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=921604e175b8ec06c39503310e7b3ec1e3eafe9e
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2021-02-12

From: Prasad J Pandit <pjp@fedoraproject.org>
Date: Tue, 11 Aug 2020 11:41:25 +0000 (+0530)
Subject: hw/pci-host: add pci-intack write method
X-Git-Url: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=520f26fc6d17b71a43eaf620e834b3bdf316f3d3

hw/pci-host: add pci-intack write method

Add pci-intack mmio write method to avoid NULL pointer dereference
issue.

Reported-by: Lei Sun <slei.casper@gmail.com>
Reviewed-by: Li Qiang <liq3ea@gmail.com>
Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Message-Id: <20200811114133.672647-2-ppandit@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
From: Prasad J Pandit <pjp@fedoraproject.org>
Date: Tue, 11 Aug 2020 11:41:27 +0000 (+0530)
Subject: vfio: add quirk device write method
X-Git-Url: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=24202d2b561c3b4c48bd28383c8c34b4ac66c2bf

vfio: add quirk device write method

Add vfio quirk device mmio write method to avoid NULL pointer
dereference issue.

Reported-by: Lei Sun <slei.casper@gmail.com>
Reviewed-by: Li Qiang <liq3ea@gmail.com>
Reviewed-by: Peter Maydell <peter.maydell@linaro.org>
Acked-by: Alex Williamson <alex.williamson@redhat.com>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Message-Id: <20200811114133.672647-4-ppandit@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---
From: Prasad J Pandit <pjp@fedoraproject.org>
Date: Tue, 11 Aug 2020 11:41:30 +0000 (+0530)
Subject: spapr_pci: add spapr msi read method
X-Git-Url: https://git.qemu.org/?p=qemu.git;a=commitdiff_plain;h=921604e175b8ec06c39503310e7b3ec1e3eafe9e

spapr_pci: add spapr msi read method

Add spapr msi mmio read method to avoid NULL pointer dereference
issue.

Reported-by: Lei Sun <slei.casper@gmail.com>
Acked-by: David Gibson <david@gibson.dropbear.id.au>
Reviewed-by: Li Qiang <liq3ea@gmail.com>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Message-Id: <20200811114133.672647-7-ppandit@redhat.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
---

Index: qemu-2.1+dfsg/hw/pci-host/prep.c
===================================================================
--- qemu-2.1+dfsg.orig/hw/pci-host/prep.c
+++ qemu-2.1+dfsg/hw/pci-host/prep.c
@@ -23,6 +23,7 @@
  * THE SOFTWARE.
  */
 
+#include "qemu/log.h"
 #include "hw/hw.h"
 #include "hw/pci/pci.h"
 #include "hw/pci/pci_bus.h"
@@ -110,8 +111,15 @@ static uint64_t raven_intack_read(void *
     return pic_read_irq(isa_pic);
 }
 
+static void raven_intack_write(void *opaque, hwaddr addr,
+                                        uint64_t data, unsigned size)
+{
+    qemu_log_mask(LOG_UNIMP, "%s not implemented\n", __func__);
+}
+
 static const MemoryRegionOps raven_intack_ops = {
     .read = raven_intack_read,
+    .write = raven_intack_write,
     .valid = {
         .max_access_size = 1,
     },
Index: qemu-2.1+dfsg/hw/misc/vfio.c
===================================================================
--- qemu-2.1+dfsg.orig/hw/misc/vfio.c
+++ qemu-2.1+dfsg/hw/misc/vfio.c
@@ -33,6 +33,7 @@
 #include "hw/pci/msix.h"
 #include "hw/pci/pci.h"
 #include "qemu-common.h"
+#include "qemu/log.h"
 #include "qemu/error-report.h"
 #include "qemu/event_notifier.h"
 #include "qemu/queue.h"
@@ -1673,8 +1674,15 @@ static uint64_t vfio_ati_3c3_quirk_read(
     return data;
 }
 
+static void vfio_ati_3c3_quirk_write(void *opaque, hwaddr addr,
+                                        uint64_t data, unsigned size)
+{
+    qemu_log_mask(LOG_GUEST_ERROR, "%s: invalid access\n", __func__);
+}
+
 static const MemoryRegionOps vfio_ati_3c3_quirk = {
     .read = vfio_ati_3c3_quirk_read,
+    .write = vfio_ati_3c3_quirk_write,
     .endianness = DEVICE_LITTLE_ENDIAN,
 };
 
Index: qemu-2.1+dfsg/hw/ppc/spapr_pci.c
===================================================================
--- qemu-2.1+dfsg.orig/hw/ppc/spapr_pci.c
+++ qemu-2.1+dfsg/hw/ppc/spapr_pci.c
@@ -33,6 +33,7 @@
 #include <libfdt.h>
 #include "trace.h"
 #include "qemu/error-report.h"
+#include "qemu/log.h"
 
 #include "hw/pci/pci_bus.h"
 
@@ -441,6 +442,12 @@ static PCIINTxRoute spapr_route_intx_pin
     return route;
 }
 
+static uint64_t spapr_msi_read(void *opaque, hwaddr addr, unsigned size)
+{
+    qemu_log_mask(LOG_GUEST_ERROR, "%s: invalid access\n", __func__);
+    return 0;
+}
+
 /*
  * MSI/MSIX memory region implementation.
  * The handler handles both MSI and MSIX.
@@ -459,8 +466,11 @@ static void spapr_msi_write(void *opaque
 }
 
 static const MemoryRegionOps spapr_msi_ops = {
-    /* There is no .read as the read result is undefined by PCI spec */
-    .read = NULL,
+    /*
+     * .read result is undefined by PCI spec.
+     * define .read method to avoid assert failure in memory_region_init_io
+     */
+    .read = spapr_msi_read,
     .write = spapr_msi_write,
     .endianness = DEVICE_LITTLE_ENDIAN
 };
