Description: This patch fixes CVE-2020-7039.
Author: Prasad J Pandit <pjp@fedoraproject.org>
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Author: Utkarsh Gupta <utkarsh@debian.org>
Origin: https://gitlab.freedesktop.org/slirp/libslirp/commit/82ebe9c370a0e2970fb5695aa19aa5214a6a1c80
Origin: https://gitlab.freedesktop.org/slirp/libslirp/commit/ce131029d6d4a405cb7d3ac6716d03e58fb4a5d9
Origin: https://gitlab.freedesktop.org/slirp/libslirp/commit/2655fffed7a9e765bcb4701dd876e9dab975f289
Bug-Debian: https://bugs.debian.org/949085
Last-Update: 2020-01-18

--- a/slirp/tcp_subr.c
+++ b/slirp/tcp_subr.c
@@ -650,7 +650,7 @@
 			n4 =  (laddr & 0xff);
 
 			m->m_len = bptr - m->m_data; /* Adjust length */
-                        m->m_len += snprintf(bptr, m->m_size - m->m_len,
+                        m->m_len += snprintf(bptr, M_FREEROOM(m),
                                              "ORT %d,%d,%d,%d,%d,%d\r\n%s",
                                              n1, n2, n3, n4, n5, n6, x==7?buff:"");
 			return 1;
@@ -683,7 +683,7 @@
 			n4 =  (laddr & 0xff);
 
 			m->m_len = bptr - m->m_data; /* Adjust length */
-			m->m_len += snprintf(bptr, m->m_size - m->m_len,
+           m->m_len += snprintf(bptr, M_FREEROOM(m),
                                              "27 Entering Passive Mode (%d,%d,%d,%d,%d,%d)\r\n%s",
                                              n1, n2, n3, n4, n5, n6, x==7?buff:"");
 
@@ -709,8 +709,8 @@
 		if (m->m_data[m->m_len-1] == '\0' && lport != 0 &&
 		    (so = tcp_listen(slirp, INADDR_ANY, 0, so->so_laddr.s_addr,
 		                     htons(lport), SS_FACCEPTONCE)) != NULL)
-                    m->m_len = snprintf(m->m_data, m->m_size, "%d",
-                                        ntohs(so->so_fport)) + 1;
+                    m->m_len = snprintf(m->m_data, M_ROOM(m),
+                                        "%d", ntohs(so->so_fport)) + 1;
 		return 1;
 
 	 case EMU_IRC:
@@ -729,7 +729,7 @@
 				return 1;
 			}
 			m->m_len = bptr - m->m_data; /* Adjust length */
-                        m->m_len += snprintf(bptr, m->m_size,
+                        m->m_len += snprintf(bptr, M_FREEROOM(m),
                                              "DCC CHAT chat %lu %u%c\n",
                                              (unsigned long)ntohl(so->so_faddr.s_addr),
                                              ntohs(so->so_fport), 1);
@@ -740,7 +740,7 @@
 				return 1;
 			}
 			m->m_len = bptr - m->m_data; /* Adjust length */
-                        m->m_len += snprintf(bptr, m->m_size,
+                        m->m_len += snprintf(bptr, M_FREEROOM(m),
                                              "DCC SEND %s %lu %u %u%c\n", buff,
                                              (unsigned long)ntohl(so->so_faddr.s_addr),
                                              ntohs(so->so_fport), n1, 1);
@@ -751,7 +751,7 @@
 				return 1;
 			}
 			m->m_len = bptr - m->m_data; /* Adjust length */
-                        m->m_len += snprintf(bptr, m->m_size,
+                        m->m_len += snprintf(bptr, M_FREEROOM(m),
                                              "DCC MOVE %s %lu %u %u%c\n", buff,
                                              (unsigned long)ntohl(so->so_faddr.s_addr),
                                              ntohs(so->so_fport), n1, 1);
@@ -838,6 +838,9 @@
 				break;
 
 			 case 5:
+               if (bptr == m->m_data + m->m_len - 1)
+                       return 1; /* We need two bytes */
+
 				/*
 				 * The difference between versions 1.0 and
 				 * 2.0 is here. For future versions of
@@ -853,6 +856,10 @@
 				/* This is the field containing the port
 				 * number that RA-player is listening to.
 				 */
+
+               if (bptr == m->m_data + m->m_len - 1)
+                       return 1; /* We need two bytes */
+
 				lport = (((u_char*)bptr)[0] << 8)
 				+ ((u_char *)bptr)[1];
 				if (lport < 6970)
