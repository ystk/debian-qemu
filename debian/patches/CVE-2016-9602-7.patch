Origin: ubuntu, https://launchpad.net/ubuntu/+source/qemu/2.0.0+dfsg-2ubuntu1.33
Reviewed-by Santiago R.R. <santiagorr@riseup.net>
Bug-Debian: 853006
Backport of:

From 56ad3e54dad6cdcee8668d170df161d89581846f Mon Sep 17 00:00:00 2001
From: Greg Kurz <groug@kaod.org>
Date: Sun, 26 Feb 2017 23:42:26 +0100
Subject: [PATCH] 9pfs: local: lgetxattr: don't follow symlinks

The local_lgetxattr() callback is vulnerable to symlink attacks because
it calls lgetxattr() which follows symbolic links in all path elements but
the rightmost one.

This patch introduces a helper to emulate the non-existing fgetxattrat()
function: it is implemented with /proc/self/fd which provides a trusted
path that can be safely passed to lgetxattr().

local_lgetxattr() is converted to use this helper and opendir_nofollow().

This partly fixes CVE-2016-9602.

Signed-off-by: Greg Kurz <groug@kaod.org>
Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
---
 hw/9pfs/9p-posix-acl.c  | 16 ++--------------
 hw/9pfs/9p-util.c       | 12 ++++++++++++
 hw/9pfs/9p-util.h       |  2 ++
 hw/9pfs/9p-xattr-user.c |  8 +-------
 hw/9pfs/9p-xattr.c      | 31 ++++++++++++++++++++++++-------
 hw/9pfs/9p-xattr.h      |  2 ++
 6 files changed, 43 insertions(+), 28 deletions(-)

Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-posix-acl.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-posix-acl.c	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-posix-acl.c	2017-04-06 08:58:51.794146746 -0400
@@ -26,13 +26,7 @@
 static ssize_t mp_pacl_getxattr(FsContext *ctx, const char *path,
                                 const char *name, void *value, size_t size)
 {
-    char *buffer;
-    ssize_t ret;
-
-    buffer = rpath(ctx, path);
-    ret = lgetxattr(buffer, MAP_ACL_ACCESS, value, size);
-    g_free(buffer);
-    return ret;
+    return local_getxattr_nofollow(ctx, path, MAP_ACL_ACCESS, value, size);
 }
 
 static ssize_t mp_pacl_listxattr(FsContext *ctx, const char *path,
@@ -90,13 +84,7 @@
 static ssize_t mp_dacl_getxattr(FsContext *ctx, const char *path,
                                 const char *name, void *value, size_t size)
 {
-    char *buffer;
-    ssize_t ret;
-
-    buffer = rpath(ctx, path);
-    ret = lgetxattr(buffer, MAP_ACL_DEFAULT, value, size);
-    g_free(buffer);
-    return ret;
+    return local_getxattr_nofollow(ctx, path, MAP_ACL_DEFAULT, value, size);
 }
 
 static ssize_t mp_dacl_listxattr(FsContext *ctx, const char *path,
Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-util.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-util.c	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-util.c	2017-04-06 08:59:04.450306939 -0400
@@ -11,6 +11,7 @@
  */
 
 #include "qemu/osdep.h"
+#include "qemu/xattr.h"
 #include "hw/virtio/virtio.h"
 #include "virtio-9p-util.h"
 
@@ -56,3 +57,14 @@
 
     return fd;
 }
+
+ssize_t fgetxattrat_nofollow(int dirfd, const char *filename, const char *name,
+                             void *value, size_t size)
+{
+    char *proc_path = g_strdup_printf("/proc/self/fd/%d/%s", dirfd, filename);
+    int ret;
+
+    ret = lgetxattr(proc_path, name, value, size);
+    g_free(proc_path);
+    return ret;
+}
Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-util.h
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-util.h	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-util.h	2017-04-06 08:58:51.794146746 -0400
@@ -46,5 +46,7 @@
 
 int relative_openat_nofollow(int dirfd, const char *path, int flags,
                              mode_t mode);
+ssize_t fgetxattrat_nofollow(int dirfd, const char *path, const char *name,
+                             void *value, size_t size);
 
 #endif
Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr-user.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-xattr-user.c	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr-user.c	2017-04-06 08:58:51.794146746 -0400
@@ -21,9 +21,6 @@
 static ssize_t mp_user_getxattr(FsContext *ctx, const char *path,
                                 const char *name, void *value, size_t size)
 {
-    char *buffer;
-    ssize_t ret;
-
     if (strncmp(name, "user.virtfs.", 12) == 0) {
         /*
          * Don't allow fetch of user.virtfs namesapce
@@ -32,10 +29,7 @@
         errno = ENOATTR;
         return -1;
     }
-    buffer = rpath(ctx, path);
-    ret = lgetxattr(buffer, name, value, size);
-    g_free(buffer);
-    return ret;
+    return local_getxattr_nofollow(ctx, path, name, value, size);
 }
 
 static ssize_t mp_user_listxattr(FsContext *ctx, const char *path,
Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr.c
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-xattr.c	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr.c	2017-04-06 08:58:51.794146746 -0400
@@ -15,6 +15,8 @@
 #include "virtio-9p.h"
 #include "fsdev/file-op-9p.h"
 #include "virtio-9p-xattr.h"
+#include "virtio-9p-util.h"
+#include "virtio-9p-local.h"
 
 
 static XattrOperations *get_xattr_operations(XattrOperations **h,
@@ -143,16 +145,31 @@
 
 }
 
+ssize_t local_getxattr_nofollow(FsContext *ctx, const char *path,
+                                const char *name, void *value, size_t size)
+{
+    char *dirpath = g_path_get_dirname(path);
+    char *filename = g_path_get_basename(path);
+    int dirfd;
+    ssize_t ret = -1;
+
+    dirfd = local_opendir_nofollow(ctx, dirpath);
+    if (dirfd == -1) {
+        goto out;
+    }
+
+    ret = fgetxattrat_nofollow(dirfd, filename, name, value, size);
+    close_preserve_errno(dirfd);
+out:
+    g_free(dirpath);
+    g_free(filename);
+    return ret;
+}
+
 ssize_t pt_getxattr(FsContext *ctx, const char *path, const char *name,
                     void *value, size_t size)
 {
-    char *buffer;
-    ssize_t ret;
-
-    buffer = rpath(ctx, path);
-    ret = lgetxattr(buffer, name, value, size);
-    g_free(buffer);
-    return ret;
+    return local_getxattr_nofollow(ctx, path, name, value, size);
 }
 
 int pt_setxattr(FsContext *ctx, const char *path, const char *name, void *value,
Index: qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr.h
===================================================================
--- qemu-2.0.0+dfsg.orig/hw/9pfs/virtio-9p-xattr.h	2017-04-06 08:58:51.798146797 -0400
+++ qemu-2.0.0+dfsg/hw/9pfs/virtio-9p-xattr.h	2017-04-06 08:58:51.794146746 -0400
@@ -28,6 +28,8 @@
                        const char *path, const char *name);
 } XattrOperations;
 
+ssize_t local_getxattr_nofollow(FsContext *ctx, const char *path,
+                                const char *name, void *value, size_t size);
 
 extern XattrOperations mapped_user_xattr;
 extern XattrOperations passthrough_user_xattr;
