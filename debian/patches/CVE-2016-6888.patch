From cb3677cd50dcb07e74d0113337e40e9e3e14d728 Mon Sep 17 00:00:00 2001
From: Li Qiang <liqiang6-s@360.cn>
Date: Mon, 22 Aug 2016 13:11:57 +0530
Subject: [PATCH] net: vmxnet: use g_new for pkt initialisation

When vmxnet transport abstraction layer initialises pkt,
the maximum fragmentation count is not checked. This could lead
to an integer overflow causing a NULL pointer dereference.
Replace g_malloc() with g_new() to catch the multiplication
overflow.

Reported-by: Li Qiang <liqiang6-s@360.cn>
Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>
Acked-by: Dmitry Fleytman <dmitry@daynix.com>
Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>

Origin: ubuntu, https://launchpad.net/ubuntu/+source/qemu/2.0.0+dfsg-2ubuntu1.43
Bug-Debian: https://bugs.debian.org/834902
Reviewed-by: Santiago R.R. <santiagorr@riseup.net>

---
 hw/net/vmxnet_tx_pkt.c |    5 ++---
 1 files changed, 2 insertions(+), 3 deletions(-)

Index: qemu-2.5+dfsg/hw/net/vmxnet_tx_pkt.c
===================================================================
--- qemu-2.5+dfsg.orig/hw/net/vmxnet_tx_pkt.c	2016-11-07 10:54:43.924215158 -0500
+++ qemu-2.5+dfsg/hw/net/vmxnet_tx_pkt.c	2016-11-07 10:54:43.916215068 -0500
@@ -59,10 +59,9 @@
 {
     struct VmxnetTxPkt *p = g_malloc0(sizeof *p);
 
-    p->vec = g_malloc((sizeof *p->vec) *
-        (max_frags + VMXNET_TX_PKT_PL_START_FRAG));
+    p->vec = g_new(struct iovec, max_frags + VMXNET_TX_PKT_PL_START_FRAG);
 
-    p->raw = g_malloc((sizeof *p->raw) * max_frags);
+    p->raw = g_new(struct iovec, max_frags);
 
     p->max_payload_frags = max_frags;
     p->max_raw_frags = max_frags;
